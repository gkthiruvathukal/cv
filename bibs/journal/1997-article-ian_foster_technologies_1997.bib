@article{ian_foster_technologies_1997,
 author = {Foster, Ian and Thiruvathukal, George K. and Tuecke, Steven},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1040-3108},
 journal = {Concurrency: Practice and Experience},
 number = {6},
 pages = {465},
 shorttitle = {Technologies for Ubiquitous Supercomputing},
 title = {Technologies for Ubiquitous Supercomputing: A Java Interface to the Nexus Communication System},
 abstract = {We use the term ubiquitous supercomputing to refer to systems that integrate low- and mid-range computing systems, advanced networks and remote high-end computers with the goal of enhancing the computational power accessible from local environments. Such systems promise to enable new applications in areas as diverse as smart instruments and collaborative environments. However, they also demand tools for transporting code between computers and for establishing flexible, dynamic communication structures. In this article, we propose that these requirements be satisfied by introducing Java classes that implement the global pointer and remote service request mechanisms defined by a communication library called Nexus. Java supports transportable code; Nexus provides communication support and represents the core communication framework for Globus, a project building infrastructure for ubiquitous supercomputing. We explain how this NexusJava library is implemented and illustrate its use with examples.},
 volume = {9},
 url = {https://ecommons.luc.edu/cs_facpubs/8/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/8/},
 year = {1997}
}

