@inproceedings{aarestad_scalable_2006,
 abbr = {IEEE},
 abstract = {Scalable atomic and parallel access to noncontiguous regions of a file is essential to exploit high performance I/O as required by large-scale applications. Parallel I/O frameworks such as MPI I/O conceptually allow I/O to be defined on regions of a file using derived datatypes. Access to regions of a file can be automatically computed on a perprocessor basis using the datatype, resulting in a list of (offset, length) pairs. We describe three approaches for implementing lock serving (whole file, region locking, and byterange locking) and compare the various approaches using three noncontiguous I/O benchmarks. We present the details of the lock server architecture and describe the implementation of a fully-functional prototype that makes use of a lightweight message passing library and red/black trees.},
 author = {Aarestad, Peter M. and Ching, Avery and Thiruvathukal, George K. and Choudhary, Alok N.},
 booktitle = {Sixth {{IEEE International Symposium}} on {{Cluster Computing}} and the {{Grid}}, 2006. {{CCGRID}} 06},
 doi = {10.1109/CCGRID.2006.88},
 file = {/Users/gkt/Zotero/storage/ZBFGSHIN/1630793.html},
 month = {5},
 pages = {35--42},
 title = {Scalable {{Approaches}} for {{Supporting MPI}}-{{IO Atomicity}}},
 volume = {1},
 year = {2006},
 url = {https://ecommons.luc.edu/cs_facpubs/21/},
 html = {https://ecommons.luc.edu/cs_facpubs/21/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/21/},
}

