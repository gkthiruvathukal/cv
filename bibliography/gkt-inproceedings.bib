
@inproceedings{ahlgren_signal_2024,
	title = {A {Signal} {Injection} {Attack} {Against} {Zero} {Involvement} {Pairing} and {Authentication} for the {Internet} of {Things}},
	doi = {10.1109/DESTION62938.2024.00008},
	booktitle = {2024 {IEEE} {Workshop} on {Design} {Automation} for {CPS} and {IoT} ({DESTION})},
	author = {Ahlgren, Isaac and West, Jack and Lee, Kyuin and Thiruvathukal, George K. and Klingensmith, Neil},
	year = {2024},
	keywords = {Authentication, Conferences, Cybersecurity, Design automation, Internet of Things, Internet of Things (IoT), Performance evaluation, Prediction algorithms, Working environment noise, Zero Involvement Pairing and Authentication},
	pages = {9--15},
}

@inproceedings{abegaz_addressing_2020,
	address = {New York, NY, USA},
	series = {{AutomotiveUI} '20},
	title = {Addressing {Rogue} {Vehicles} by {Integrating} {Computer} {Vision}, {Activity} {Monitoring}, and {Contextual} {Information}},
	isbn = {9781450380669},
	url = {https://ecommons.luc.edu/cs_facpubs/266/},
	doi = {10.1145/3409251.3411724},
	abstract = {In this paper, we address the detection of rogue autonomous vehicles using an integrated approach involving computer vision, activity monitoring and contextual information. The proposed approach can be used to detect rogue autonomous vehicles using sensors installed on observer vehicles that are used to monitor and identify the behavior of other autonomous vehicles operating on the road. The safe braking distance and the safe following time are computed to identify if an autonomous vehicle is behaving properly. Our preliminary results show that there is a wide variation in both the safe following time and the safe braking distance recorded using three autonomous vehicles in a test-bed. These initial results show significant progress for the future efforts to coordinate the operation of autonomous, semi-autonomous and non-autonomous vehicles.},
	booktitle = {12th {International} {Conference} on {Automotive} {User} {Interfaces} and {Interactive} {Vehicular} {Applications}},
	publisher = {Association for Computing Machinery},
	author = {Abegaz, Brook and Chan-Tin, Eric and Klingensmith, Neil and Thiruvathukal, George K.},
	year = {2020},
	pages = {62--64},
}

@inproceedings{thiruvathukal_toward_1994,
	title = {Toward {Scalable} {Parallel} {Software}: {An} {Active} {Object} {Model} and {Library} to {Support} von {Neumann} {Languages}},
	url = {https://ecommons.luc.edu/cs_facpubs/50},
	abstract = {Scalable parallel processing has been proposed as the technology scientists and engineers can use today to solve the problems of tomorrow. Many computational Grand Challenge problems require between two and three orders of magnitude than can be provided with the scalable parallel hardware of the early nineteen-nineties. While hardware continues to become more scalable and cheaper, software is not advancing at the same pace and remains a very expensive part of systems development. A great deal of emphasis on software technology to support scalable parallel processing is placed on von Neumann languages. One of two approaches is common: (a) augment the von Neumann language with explicit parallel constructs or (b) write super-optimizing compilers to “find” the parallelism in a von Neumann program. These two approaches appear to be useful at some level; however, this paper argues that software constructed using these approaches is not likely to scale very well, because an appropriate level of abstraction is not being used to solve the problem. We propose a simple layered architecture for doing parallel processing. The outer layer is the composition layer. This layer is used from a von Neumann language to encode algorithms using standard building blocks (objects). The middle layer uses objects. These objects exhibit high potential for parallelism. In our application, we focus on multidimensional arrays. At the lowest level, Itinerant Actors is used. Itinerant Actors is an object model developed by Christopher and Thiruvathukal at IIT to support asynchronous message-passing between active objects with a number of other useful ideas.},
	booktitle = {International {Conference} on {High}-{Performance} {Computing} ({IEEE} {HiPC}) {India}},
	author = {Thiruvathukal, George K.},
	month = dec,
	year = {1994},
}

@inproceedings{oconnell_distributed_1994,
	title = {Distributed {Memo}: {A} {Heterogeneously} {Distributed} and {Parallel} {Software} {Development} {Environment}},
	volume = {2},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	shorttitle = {Distributed {Memo}},
	url = {https://ecommons.luc.edu/cs_facpubs/44/},
	abstract = {Heterogeneously distributed and parallel computing environments are highly dependent on hardware, data migration, and protocols. The result is significant difficulty in software reuse, portability across platforms, and an increased overall development effort. The appearance of a shared directory of unordered queues can be provided by integrating heterogeneous computers transparently. This integration provides a conducive environment for parallel and distributed application development, by abstracting the issues of hardware and communication. Object oriented technology is exploited to provide this seamless environment.},
	booktitle = {International {Conference} on {Parallel} {Processing}},
	author = {O'Connell, William T. and Thiruvathukal, George K. and Christopher, Thomas W.},
	year = {1994},
	pages = {II57--II64},
}

@inproceedings{shen_novel_2000,
	address = {ACM, 2 Penn Plaza, Suite 701, New York, NY 10121-0701, USA},
	title = {A {Novel} {Application} {Development} {Environment} for {Large}-scale {Scientific} {Computations}},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	isbn = {978-1-58113-270-0},
	url = {https://ecommons.luc.edu/cs_facpubs/48/},
	abstract = {Our results demonstrate that our novel application development environment provides both ease-of-use and high performance for large-scale, I/O-intensive scientific applications.},
	booktitle = {Proceedings of the {International} {Conference} on {Supercomputing}},
	author = {Shen, Xiaohui and Liao, Wei-Keng and Choudhary, Alok N. and Memik, Gokhan and Kandemir, Mahmut and More, Sachin and Thiruvathukal, George K. and Singh, Arti},
	year = {2000},
}

@inproceedings{thiruvathukal_simulation_1991,
	title = {A {Simulation} of {Demand}-driven {Dataflow}: {Translation} from {Lucid} into {MDC} language},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	shorttitle = {A simulation of demand-driven dataflow},
	url = {https://ecommons.luc.edu/cs_facpubs/51},
	abstract = {Message Driven Computation (MDC) is a model of computation with which they have been experimenting at the Illinois Institute of Technology. The authors aim to prove the viability of MDC in practice for the expression of parallel algorithms and the implementation of functional and dataflow programming languages. In the paper they discuss their implementation of the Lucid programming language in MDC. The discussion presents a subset of Lucid which illustrates the principles of Lucid, Message Driven Computing, and the translation into and the interpretation of dataflow graphs.{\textless}{\textgreater}},
	booktitle = {International {Parallel} {Processing} {Symposium}},
	author = {Thiruvathukal, George K. and Christopher, Thomas W.},
	year = {1991},
	pages = {634--637},
}

@inproceedings{oconnell_generic_1994,
	title = {A {Generic} {Software} {Modeling} {Framework} for {Building} {Heterogeneous} {Distributed} and {Parallel} {Software} {Systems}},
	url = {https://ecommons.luc.edu/cs_facpubs/43/},
	abstract = {Heterogeneous distributed and parallel computing environments are highly dependent on hardware and communication protocols. The result is significant difficulty in software reuse, portability across platforms, interoperability, and an increased overall development effort. A new systems engineering approach is needed for parallel processing systems in heterogeneous environments. The generic modeling framework de-emphasizes platform- specific development while exploiting software reuse (and platform-specific capabilities) with a simple, well defined, and easily integrated set of abstractions providing a high level of heterogeneous interoperability.},
	booktitle = {International {Conference} on {Advanced} {Science} and {Technology} ({ICAST} 1994 at {AT}\&{T} {Bell} {Laboratories})},
	author = {O'Connell, William T. and Thiruvathukal, George K. and Christopher, Thomas W.},
	month = jan,
	year = {1994},
}

@inproceedings{oconnell_distributed_1994-1,
	title = {Distributed {Memo}: {A} {Heterogeneously} {Parallel} and {Distributed} {Software} {Programming} {Environment}},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	shorttitle = {Distributed {Memo}},
	url = {https://ecommons.luc.edu/cs_facpubs/44/},
	booktitle = {International {Conference} on {Parallel} {Processing}},
	author = {O'Connell, William T. and Thiruvathukal, George K. and Christopher, Thomas W.},
	year = {1994},
	pages = {II},
}

@inproceedings{shen_java_2000,
	title = {A {Java} {Graphical} {User} {Interface} for {Large}-scale {Scientific} {Computations} in {Distributed} {Systems}},
	volume = {1},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	url = {https://ecommons.luc.edu/cs_facpubs/49/},
	abstract = {Large-scale scientific applications present great challenges to computational scientists in terms of obtaining high performance and in managing large datasets. These applications (most of which are simulations) may employ multiple techniques and resources in a heterogeneously distributed environment. Effective working in such an environment is crucial for modern large-scale simulations. In this paper, we present an integrated Java graphical user interface (IJ-GUI) that provides a control platform for managing complex programs and their large datasets easily. As far as performance is concerned, we present and evaluate our initial implementation of two optimization schemes: data replication and data prediction. Data replication can take advantage of 'temporal locality' by caching the remote datasets on local disks; data prediction, on the other hand, provides prefetch hints based on the datasets' past activities that are kept in databases. We first introduce the data contiguity concept in such an environment that guides data prediction. The relationship between the two approaches is discussed.},
	booktitle = {Fourth {International} {Conference} on {High}-{Performance} {Computing} in the {Asia}-{Pacific} {Region}},
	author = {Shen, Xiaohui and Thiruvathukal, George K. and Liao, Wei-Keng and Choudhary, Alok N and Singh, Arti},
	year = {2000},
	pages = {478--484 vol.1},
}

@inproceedings{liao_scalable_2003,
	title = {Scalable {Implementations} of {MPI} {Atomicity} for {Concurrent} {Overlapping} {I}/{O}},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	url = {https://ecommons.luc.edu/cs_facpubs/12/},
	abstract = {For concurrent I/O operations, atomicity defines the results in the overlapping file regions simultaneously read/written by requesting processes. Atomicity has been well studied at the file system level, such as POSIX standard. In this paper, we investigate the problems arising from the implementation of MPI atomicity for concurrent overlapping write access and provide a few programming solutions. Since the MPI definition of atomicity differs from the POSIX one, an implementation that simply relies on the POSIX file systems does not guarantee correct MPI semantics. To have a correct implementation of atomic I/O in MPI, we examine the efficiency of three approaches: 1) file locking, 2) graph-coloring, and 3) process-rank ordering. Performance complexity for these methods are analyzed and their experimental results are presented for file systems including NFS, SGI’s XFS, and IBM’s GPFS.},
	booktitle = {International {Conference} on {Parallel} {Processing}},
	author = {Liao, Wei-Keng and Choudhary, Alok N. and Coloma, Kenin and Thiruvathukal, George K. and Ward, Lee and Russell, Eric and Pundit, Neil},
	year = {2003},
	pages = {239--248},
}

@inproceedings{aarestad_scalable_2006,
	title = {Scalable {Approaches} for {Supporting} {MPI}-{IO} {Atomicity}},
	volume = {1},
	url = {https://ecommons.luc.edu/cs_facpubs/21/},
	doi = {10.1109/CCGRID.2006.88},
	abstract = {Scalable atomic and parallel access to noncontiguous regions of a file is essential to exploit high performance I/O as required by large-scale applications. Parallel I/O frameworks such as MPI I/O conceptually allow I/O to be defined on regions of a file using derived datatypes. Access to regions of a file can be automatically computed on a perprocessor basis using the datatype, resulting in a list of (offset, length) pairs. We describe three approaches for implementing lock serving (whole file, region locking, and byterange locking) and compare the various approaches using three noncontiguous I/O benchmarks. We present the details of the lock server architecture and describe the implementation of a fully-functional prototype that makes use of a lightweight message passing library and red/black trees.},
	booktitle = {Sixth {IEEE} {International} {Symposium} on {Cluster} {Computing} and the {Grid}, 2006. {CCGRID} 06},
	author = {Aarestad, Peter M. and Ching, Avery and Thiruvathukal, George K. and Choudhary, Alok N.},
	month = may,
	year = {2006},
	pages = {35--42},
}

@inproceedings{thiruvathukal_electronic_2006,
	title = {Electronic {Editing} of {Anglo}-{Saxon} {Texts}},
	url = {https://ecommons.luc.edu/cs_facpubs/56/},
	abstract = {Poster presentation/demonstration at the first Chicago Colloquium on Digital Humanities about editing of Old English texts and the Anglo-Saxon project.},
	booktitle = {Chicago {Colloquium} on {Digital} {Humanities} and {Computer} {Science}},
	author = {Thiruvathukal, George K. and Frantzen, Allen J.},
	month = nov,
	year = {2006},
}

@inproceedings{gonzalez_hydra_2006,
	title = {The {Hydra} {Filesystem}: {A} {Distrbuted} {Storage} {Famework}},
	shorttitle = {The {Hydra} {Filesystem}},
	url = {https://ecommons.luc.edu/cs_facpubs/7},
	abstract = {Hydra File System (HFS) is an experimental framework for constructing parallel and distributed filesystems. While parallel and distributed applications requiring scalable and flexible access to storage and retrieval are becoming more commonplace, parallel and distributed filesystems remain difficult to deploy easily and configure for different needs. HFS aims to be different by being true to the tradition of high-performance computing while employing modern design patterns to allow various policies to be configured on a per instance basis (e.g. storage, communication, security, and indexing schemes). We describe a working prototype (available for public download) that has been implemented in the Python programming language.},
	booktitle = {Linux {Clusters} {International}},
	author = {Gonzalez, Benjamin and Thiruvathukal, George K.},
	year = {2006},
}

@inproceedings{bone_taming_2008,
	title = {Taming {XML}: {Objects} {First}, {Then} {Markup}},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	shorttitle = {Taming {XML}},
	url = {https://ecommons.luc.edu/cs_facpubs/39},
	abstract = {Processing markup in object-oriented languages often requires the programmer to focus on the objects generating the markup rather than the more pertinent domain objects. The BetterXML framework aims to improve this situation by allowing the programmer to develop a domain-specific object model as usual and later bind this model to preexisting or newly generated markup. To this end, the framework provides two types of object trees, XElement and NaturalXML, for representing XML documents. XElement goes beyond DOM-like automatic parsing of XML by supporting the custom mapping of elements to domain objects; NaturalXML allows the mapping of existing domain objects to XML elements using class metadata. Both types of object trees can be inflated and deflated by means of a common intermediate representation in the form of an event stream. Finally, the framework includes the XML Intermediate Representation (XIR), a lossless record-oriented representation of XML documents for efficient streaming and other types of data exchange.},
	booktitle = {{IEEE} {International} {Conference} on {Electro}/{Information} {Technology} ({EIT} 2008)},
	author = {Bone, Matt and Nabicht, Peter F. and {Läufer} and Thiruvathukal, George K.},
	year = {2008},
	pages = {488--493},
}

@inproceedings{thiruvathukal_e-carrel_2010,
	title = {E-{Carrel}: {An} {Environment} for {Collaborative} {Textual} {Scholarship}},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	shorttitle = {E-{Carrel}},
	url = {https://ecommons.luc.edu/cs_facpubs/1},
	abstract = {The E-Carrel project aims to address the preservation of, access to, and re-uses of humanities electronic text files. It enables dynamic, growing resource projects as repositories for new knowledge. It provides for on-line distributed data and tools that are open to new scholarly enhancement through a user friendly tagging tool, sophisticated use of stand-off markup and annotation (leveraging RDF capabilities), and a browsing system anyone can use. It creates a secure system of text preparation and dissemination that encourages collaboration and participation by anyone interested in the texts. To insure the endurance of authenticated texts, multiple copies are distributed on the Internet. Foundation texts anchor a system for maintaining and growing project usefulness beyond the originators\&rsquo; interest and the functions they imagined. Increasing access to humanities texts as useful, adaptable, reliable source materials that can be re-purposed will increase interest in continued maintenance, which are critical for long-term preservation and access.},
	urldate = {2018-01-07},
	publisher = {The University of Chicago},
	author = {Thiruvathukal, George K. and Jones, Steven E. and Shillingsburg, Peter},
	year = {2010},
}

@inproceedings{kaylor_online_2010,
	title = {Online {Layered} {File} {System} ({OLFS}): {A} layered and versioned filesystem and performance analysis},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	shorttitle = {Online {Layered} {File} {System} ({OLFS})},
	url = {https://ecommons.luc.edu/cs_facpubs/40},
	abstract = {We present a novel form of intra-volume directory layering with hierarchical, inheritance-like namespace unification. While each layer of an OLFS volume constitutes a subvolume that can be mounted separately in a fan-in configuration, the entire hierarchy is always accessible (online) and fully navigable through any mounted layer. OLFS uses a relational database to store its layering metadata and either a relational database or any (virtual) host file system as its backing store, along with metadata and block caching for improved performance. Because OLFS runs as a virtual file system in user-space, its capabilities are available to all existing software without modification or special privileges. We have developed a reference implementation of OLFS for FUSE based on MySQL and XFS, and conducted performance benchmarking against XFS by itself. We explore several applications of OLFS, such as enhanced server synchronization, transactional file operations, and versioning.},
	booktitle = {{IEEE} {International} {Conference} on {Electro}/{Information} {Technology} ({EIT} 2010)},
	author = {Kaylor, Joe P. and Läufer, Konstantin and Thiruvathukal, George K.},
	year = {2010},
	pages = {1--9},
}

@inproceedings{jones_object_2011,
	title = {The {Object} of {Platform} {Studies}: {Relational} {Materialities} and the {Social} {Platform} (the {Case} of the {Nintendo} {Wii})},
	url = {https://ecommons.luc.edu/cs_facpubs/28/},
	abstract = {Racing the Beam: The Atari Video Computer System,by Ian Bogost and Nick Montfort, inaugurated thePlatform Studies series at MIT Press in 2009.We’ve coauthored a new book in the series, Codename: Revolution: the Nintendo Wii Video Game Console. Platform studies is a quintessentially Digital Humanities approach, since it’s explicitly focused on the interrelationship of computing and cultural expression. According to the series preface, the goal of platform studies is “to consider the lowest level of computing systems and to understand how these systems relate to culture and creativity.”In practice, this involves paying close attentionto specific hardware and software interactions–to the vertical relationships between a platform’s multilayered materialities (Hayles; Kirschenbaum),from transistors to code to cultural reception. Any given act of platform-studies analysis may focus for example on the relationship between the chipset and the OS, or between the graphics processor and display parameters or game developers’ designs.In computing terms, platform is an abstraction(Bogost and Montfort), a pragmatic frame placed around whatever hardware-and-software configuration is required in order to build or run certain specificapplications (including creative works). The object of platform studies is thus a shifting series of possibility spaces, any number of dynamic thresholds between discrete levels of a system.},
	booktitle = {Digital {Humanities} 2011 ({DH2011})},
	author = {Jones, Steven E. and Thiruvathukal, George K.},
	year = {2011},
	pages = {163--164},
}

@inproceedings{kaylor_restfs_2011,
	address = {ACM, 2 Penn Plaza, Suite 701, New York, NY 10121-0701, USA},
	title = {{RestFS}: {Resources} are {Filesystems}, too},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	isbn = {978-1-4503-0623-2},
	url = {https://ecommons.luc.edu/cs_facpubs/15/},
	abstract = {We have designed and implemented RestFS, a software framework that provides a uniform, configurable connector layer for mapping remote web-based resources to local filesystem-based resources, recognizing the similarity between these two types of resources. Such mappings enable programmatic access to a resource, as well as composition of two or more resources, through the local operating system's standard filesystem application programming interface (API), scriptable file-based command-line utilities, and inter-process communication (IPC) mechanisms. The framework supports automatic and manual authentication. We include several examples intended to show the utility and practicality of our framework.},
	booktitle = {Second {International} {Workshop} / {RESTful} {Design} ({WS}-{REST} '11)},
	author = {Kaylor, Joe P. and Läufer, Konstantin and Thiruvathukal, George K.},
	year = {2011},
}

@inproceedings{kaylor_simplifying_2012,
	title = {Simplifying {Domain} {Modeling} and {Memory} {Management} in {User}-{Mode} {Filesystems} with the {NOFS} {Framework}},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	url = {https://ecommons.luc.edu/cs_facpubs/62/},
	booktitle = {International {Conference} on {Electro} {Information} {Technology} 2012},
	author = {Kaylor, Joe P. and {Läufer} and Thiruvathukal, George K.},
	year = {2012},
}

@inproceedings{borg_single_2014,
	title = {Single {Page} {Apps} for {Humanists}: {A} {Case} {Study} {Using} the {Perseus} {Richmond} {Times} {Corpus}},
	url = {http://dharchive.org/paper/DH2014/Paper-888.xml},
	abstract = {TEI is good at what it does: static documents rendered in glorious detail. But TEI is old. Its age doesn’t make TEI irrelevant, but it’s important to be conscious of how the way we weave the fabric of the web has changed since TEI was conceived in 1994, and reevaluate some of our assumptions about its use. In this early work, we are exploring this rethinking as part of a larger study within the center on general methods for isolating the complexity frequently associated with XML-based frameworks.},
	booktitle = {Proceedings of {Digital} {Humanities} 2014 ({DH2014})},
	author = {Borg, Trevor and Thiruvathukal, George K.},
	year = {2014},
}

@inproceedings{honig_framework_2015,
	title = {A {Framework} {Architecture} for {Student} {Learning} in {Distributed} {Embedded} {Systems}},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	url = {https://ecommons.luc.edu/cs_facpubs/257/},
	abstract = {Academic courses focused on individual microcomputers or client/server applications are no longer sufficient for students to develop knowledge in embedded systems. Current and near-term industrial systems employ multiple interacting components and new network and security approaches; hence, academic preparation requires teaching students to develop realistic projects comparable to these real-world products. However, the complexity, breadth, and technical variations of these real-world products are difficult to reproduce in the classroom. This paper outlines preliminary work on a framework architecture suitable for academic teaching of modern embedded systems including the Internet of Things. It defines four layers, two of which are at the edges of the network, and not adequately covered in academia. For each layer of the architecture, specific technology and suitable devices are identified. Desired academic outcomes for courses using projects based on the architecture are identified. Feedback and comparison is sought on how effective student course and research activities based on the framework will be to real-world embedded systems developers.},
	booktitle = {10th {IEEE} {International} {Symposium} on {Industrial} {Embedded} {Systems} ({SIES})},
	author = {Honig, William and Läufer, Konstantin and Thiruvathukal, George K.},
	year = {2015},
	pages = {1--4},
}

@inproceedings{dennis_computer_2017,
	title = {Computer {Science} and {Cultural} {History}: {A} {Dialogue}},
	url = {https://ecommons.luc.edu/history_facpubs/42/},
	booktitle = {{CESTEMER} {Conference}: {Cultivating} {Ensembles} in {STEM} {Education} and {Research}},
	author = {Dennis, David B. and Thiruvathukal, George K.},
	year = {2017},
}

@inproceedings{carver_software_2013,
	title = {Software {Engineering} {Need} not be {Difficult}},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	url = {https://ecommons.luc.edu/cs_facpubs/75},
	abstract = {"Progress in scientific research is dependent on the quality and accessibility of software at all levels" (the overall premise of the workshop). We argue that true progress depends on embracing the best traditional–and emergent– practices in software engineering, especially agile practices that intersect with the tradition of software engineering. Software engineering as practiced today is more than the stereotypical monolithic lifecycle processes (e.g. waterfall, spiral, etc.) that historically have impeded progress for small/medium sized development efforts. In addition, the discipline and practice of software engineering includes software quality (with an established tradition of software metrics). Software processes can be pragmatic and use best features/practices of various models without impeding developer productivity. The embracement of these practices may also be important to prevent a brain drain of sorts, as students are increasingly eschewing traditional scientific/computation science research in favor of industry opportunities, where they can literally apply what they have learned in software development courses where pragmatic software engineering practices (e.g. test-driven design, RESTful architecture, etc.) are already prevalent."},
	booktitle = {{WSSSPE} 2013},
	publisher = {Figshare},
	author = {Carver, Jeffrey C. and Thiruvathukal, George K.},
	year = {2013},
}

@inproceedings{barnes_proceedings_2015,
	title = {Proceedings of 2015 {Research} on {Equity} and {Sustained} {Participation} in {Engineering}, {Computing}, and {Technology} ({RESPECT}) {RESPECT} 2015},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	urldate = {2018-01-07},
	booktitle = {Research on {Equity} and {Sustained} {Participation} in {Engineering}, {Computing}, and {Technology} ({RESPECT}) {RESPECT} 2015},
	author = {Barnes, Tiffany and Thiruvathukal, George K. and Boyer, Kristy Elizabeth and Forbes, Jeff and Payton, Jamie},
	year = {2015},
}

@inproceedings{decker_research_2016,
	address = {Piscataway, NJ},
	title = {Research on {Equity} and {Sustained} {Participation} in {Engineering}, {Computing}, and {Technology} ({RESPECT}) {RESPECT} 2016},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	shorttitle = {2016 {Research} on {Equity} and {Sustained} {Participation} in {Engineering}, {Computing}, and {Technology} ({RESPECT}) {RESPECT} 2016},
	urldate = {2018-01-07},
	publisher = {IEEE},
	author = {Decker, Adrienne and Payton, Jamie and Eiselt, Kurt and Barnes, Tiffany and Thiruvathukal, George K.},
	year = {2016},
}

@inproceedings{gauen_comparison_2017,
	title = {Comparison of {Visual} {Datasets} for {Machine} {Learning}},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	url = {https://ecommons.luc.edu/cs_facpubs/148/},
	abstract = {One of the greatest technological improvements in recent years is the rapid progress using machine learning for processing visual data. Among all factors that contribute to this development, datasets with labels play crucial roles. Several datasets are widely reused for investigating and analyzing different solutions in machine learning. Many systems, such as autonomous vehicles, rely on components using machine learning for recognizing objects. This paper compares different visual datasets and frameworks for machine learning. The comparison is both qualitative and quantitative and investigates object detection labels with respect to size, location, and contextual information. This paper also presents a new approach creating datasets using real-time, geo-tagged visual data, greatly improving the contextual information of the data. The data could be automatically labeled by cross-referencing information from other sources (such as weather).},
	booktitle = {{IEEE} {Conference} on {Information} {Reuse} and {Integration} 2017},
	author = {Gauen, Kent and Dailey, Ryan and Laiman, John and Zi, Yuxiang and Asokan, Nirmal and Lu, Yung-Hsiang and Thiruvathukal, George K. and Shyu, Mei-Ling and Chen, Shu-Ching},
	year = {2017},
	pages = {346--355},
}

@inproceedings{kaseb_analyzing_2018,
	title = {Analyzing {Real}-{Time} {Multimedia} {Content} from {Network} {Cameras} {Using} {CPUs} and {GPUs} in the {Cloud}},
	url = {https://ecommons.luc.edu/cs_facpubs/190/},
	doi = {10.1109/MIPR.2018.00020},
	abstract = {Millions of network cameras are streaming real-time multimedia content (images or videos) for various environments (e.g., highways and malls) and can be used for a variety of applications. Analyzing the content from many network cameras requires significant amounts of computing resources. Cloud vendors offer resources in the form of cloud instances with different capabilities and hourly costs. Some instances include GPUs that can accelerate analysis programs. Doing so incurs additional monetary cost because instances with GPUs are more expensive. It is a challenging problem to reduce the overall monetary cost of using the cloud to analyze the real-time multimedia content from network cameras while meeting the desired analysis frame rates. This paper describes a cloud resource manager that solves this problem by estimating the resource requirements of executing analysis programs using CPU or GPU, formulating the resource allocation problem as a multiple-choice vector bin packing problem, and solving it using an existing algorithm. The experiments show that the manager can reduce up to 61\% of the cost compared with other allocation strategies.},
	booktitle = {2018 {IEEE} {Conference} on {Multimedia} {Information} {Processing} and {Retrieval} ({MIPR})},
	author = {Kaseb, Ahmed S. and Fu, Bo and Mohan, Anup and Lu, Yung-Hsiang and Reibman, Amy and Thiruvathukal, George K.},
	month = apr,
	year = {2018},
	pages = {69--74},
}

@inproceedings{kaseb_analyzing_2018-1,
	title = {Analyzing {Real}-{Time} {Multimedia} {Content} {From} {Network} {Cameras} {Using} {CPUs} and {GPUs} in the {Cloud}},
	url = {https://ecommons.luc.edu/cs_facpubs/190/},
	abstract = {Millions of network cameras are streaming real-time multimedia content (images or videos) for various environments (e.g., highways and malls) and can be used for a variety of applications. Analyzing the content from many network cameras requires significant amounts of computing resources. Cloud vendors offer resources in the form of cloud instances with different capabilities and hourly costs. Some instances include GPUs that can accelerate analysis programs. Doing so incurs additional monetary cost because instances with GPUs are more expensive. It is a challenging problem to reduce the overall monetary cost of using the cloud to analyze the real-time multimedia content from network cameras while meeting the desired analysis frame rates. This paper describes a cloud resource manager that solves this problem by estimating the resource requirements of executing analysis programs using CPU or GPU, formulating the resource allocation problem as a multiple-choice vector bin packing problem, and solving it using an existing algorithm. The experiments show that the manager can reduce up to 61\% of the cost compared with other allocation strategies.},
	booktitle = {{IEEE} {International} {Conference} on {Multimedia} {Information} {Processing} and {Retrieval}},
	author = {Kaseb, Ahmed S. and Fu, Bo and Mohan, Anup and Lu, Yung-Hsiang and Reibman, Amy and Thiruvathukal, George K.},
	year = {2018},
}

@inproceedings{tung_large-scale_2019,
	title = {Large-{Scale} {Object} {Detection} of {Images} from {Network} {Cameras} in {Variable} {Ambient} {Lighting} {Conditions}},
	url = {http://ecommons.luc.edu/cs_facpubs/207},
	doi = {10.1109/MIPR.2019.00080},
	abstract = {Computer vision relies on labeled datasets for training and evaluation in detecting and recognizing objects. The popular computer vision program, YOLO ("You Only Look Once"), has been shown to accurately detect objects in many major image datasets. However, the images found in those datasets, are independent of one another and cannot be used to test YOLO's consistency at detecting the same object as its environment (e.g. ambient lighting) changes. This paper describes a novel effort to evaluate YOLO's consistency for large-scale applications. It does so by working (a) at large scale and (b) by using consecutive images from a curated network of public video cameras deployed in a variety of real-world situations, including traf?c intersections, national parks, shopping malls, university campuses, etc. We speci?cally examine YOLO's ability to detect objects in different scenarios (e.g., daytime vs. night), leveraging the cameras' ability to rapidly retrieve many successive images for evaluating detection consistency. Using our camera network and advanced computing resources (supercomputers), we analyzedmorethan5millionimagescapturedby140network cameras in 24 hours. Compared with labels marked by humans (considered as "ground truth"), YOLO struggles to consistently detect the same humans and cars as their positions change from one frame to the next; it also struggles to detect objects at night time. Our ?ndings suggest that state-of-the art vision solutions should be trained by data from network camera with contextual information before they can be deployed in applications that demand high consistency on object detection.},
	booktitle = {2019 {IEEE} {Conference} on {Multimedia} {Information} {Processing} and {Retrieval} ({MIPR})},
	author = {Tung, Caleb and Kelleher, Matthew R. and Schlueter, Ryan J. and Xu, Binhan and Lu, Yung-Hsiang and Thiruvathukal, George K. and Chen, Yen-Kuan. and Lu, Yang},
	month = mar,
	year = {2019},
	pages = {393--398},
}

@inproceedings{greenberg_exercises_2019,
	title = {Exercises {Integrating} {High} {School} {Mathematics} with {Robot} {Motion} {Planning}},
	url = {http://ecommons.luc.edu/cs_facpubs/231},
	doi = {10.1109/FIE43999.2019.9028394},
	abstract = {This Innovative Practice Work in Progress presents progress in developing exercises for high school students incorporating level-appropriate mathematics into robotics activities. We assume mathematical foundations ranging from algebra to precalculus, whereas most prior work on integrating mathematics into robotics uses only very elementary mathematical reasoning or, at the other extreme, is comprised of technical papers or books using calculus and other advanced mathematics. The exercises suggested are relevant to any differential-drive robot, which is an appropriate model for many different varieties of educational robots. They guide students towards comparing a variety of natural navigational strategies making use of typical movement primitives. The exercises align with Common Core State Standards for Mathematics.},
	booktitle = {2019 {IEEE} {Frontiers} in {Education} {Conference} ({FIE})},
	author = {Greenberg, Ronald I. and Thiruvathukal, George K.},
	month = oct,
	year = {2019},
}

@inproceedings{eisty_use_2019,
	title = {Use of {Software} {Process} in {Research} {Software} {Development}: {A} {Survey}},
	url = {http://ecommons.luc.edu/cs_facpubs/214},
	doi = {10.1145/3319008.3319351},
	abstract = {Background: Developers face challenges in building high-quality research software due to its inherent complexity. These challenges can reduce the confidence users have in the quality of the result produced by the software. Use of a defined software development process, which divides the development into distinct phases, results in improved design, more trustworthy results, and better project management. Aims: This paper focuses on gaining a better understanding of the use of software development process for research software. Method: We surveyed research software developers to collect information about their use of software development processes. We analyze whether and demographic factors influence the respondents' use of and perceived value in defined process. Results: Based on 98 responses, research software developers appear to follow a defined software development process at least some of the time. The respondents also have a strong positive perception about the value of following processes. Conclusions: To produce high-quality and reliable research software, which is critical for many research domains, research software developers must follow a proper software development process. The results indicate a positive perception of value about using defined development processes that should lead to both short-term benefits through improved results and long-term benefits through more maintainable software.},
	booktitle = {Proceedings of the {Evaluation} and {Assessment} on {Software} {Engineering} ({EASE}) 2019},
	author = {Eisty, Nasir U. and Thiruvathukal, George K. and Carver, Jeffrey C.},
	year = {2019},
}

@inproceedings{hu_crowdsourcing_2020,
	address = {New York, NY, USA},
	series = {{WWW} '20},
	title = {Crowdsourcing {Detection} of {Sampling} {Biases} in {Image} {Datasets}},
	isbn = {9781450370233},
	url = {https://doi.org/10.1145/3366423.3380063},
	doi = {10.1145/3366423.3380063},
	abstract = {Despite many exciting innovations in computer vision, recent studies reveal a number of risks in existing computer vision systems, suggesting results of such systems may be unfair and untrustworthy. Many of these risks can be partly attributed to the use of a training image dataset that exhibits sampling biases and thus does not accurately reflect the real visual world. Being able to detect potential sampling biases in the visual dataset prior to model development is thus essential for mitigating the fairness and trustworthy concerns in computer vision. In this paper, we propose a three-step crowdsourcing workflow to get humans into the loop for facilitating bias discovery in image datasets. Through two sets of evaluation studies, we find that the proposed workflow can effectively organize the crowd to detect sampling biases in both datasets that are artificially created with designed biases and real-world image datasets that are widely used in computer vision research and system development.},
	booktitle = {Proceedings of {The} {Web} {Conference} 2020},
	publisher = {Association for Computing Machinery},
	author = {Hu, Xiao and Wang, Haobo and Vegesana, Anirudh and Dube, Somesh and Yu, Kaiwen and Kao, Gore and Chen, Shuo-Han and Lu, Yung-Hsiang and Thiruvathukal, George K. and Yin, Ming},
	year = {2020},
	note = {event-place: Taipei, Taiwan},
	pages = {2955--2961},
}

@inproceedings{goel_low-power_2020,
	address = {New York, NY, USA},
	series = {{ISLPED} '20},
	title = {Low-{Power} {Object} {Counting} with {Hierarchical} {Neural} {Networks}},
	isbn = {9781450370530},
	url = {https://doi.org/10.1145/3370748.3406569},
	doi = {10.1145/3370748.3406569},
	abstract = {Deep Neural Networks (DNNs) achieve state-of-the-art accuracy in many computer vision tasks, such as object counting. Object counting takes two inputs: an image and an object query and reports the number of occurrences of the queried object. To achieve high accuracy, DNNs require billions of operations, making them difficult to deploy on resource-constrained, low-power devices. Prior work shows that a significant number of DNN operations are redundant and can be eliminated without affecting the accuracy. To reduce these redundancies, we propose a hierarchical DNN architecture for object counting. This architecture uses a Region Proposal Network (RPN) to propose regions-of-interest (RoIs) that may contain the queried objects. A hierarchical classifier then efficiently finds the RoIs that actually contain the queried objects. The hierarchy contains groups of visually similar object categories. Small DNNs at each node of the hierarchy classify between these groups. The RoIs are incrementally processed by the hierarchical classifier. If the object in an RoI is in the same group as the queried object, then the next DNN in the hierarchy processes the RoI further; otherwise, the RoI is discarded. By using a few small DNNs to process each image, this method reduces the memory requirement, inference time, energy consumption, and number of operations with negligible accuracy loss when compared with the existing techniques.},
	booktitle = {Proceedings of the {ACM}/{IEEE} {International} {Symposium} on {Low} {Power} {Electronics} and {Design}},
	publisher = {Association for Computing Machinery},
	author = {Goel, Abhinav and Tung, Caleb and Aghajanzadeh, Sara and Ghodgaonkar, Isha and Ghosh, Shreya and Thiruvathukal, George K. and Lu, Yung-Hsiang},
	year = {2020},
	note = {event-place: Boston, Massachusetts},
	pages = {163168},
}

@inproceedings{lewis_distributed_2017,
	address = {ACM, 2 Penn Plaza, Suite 701, New York, NY 10121-0701, USA},
	title = {A {Distributed} {Graph} {Approach} for {Pre}-processing {Linked} {RDF} {Data} {Using} {Supercomputers}},
	copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
	isbn = {978-1-4503-4987-1},
	url = {https://ecommons.luc.edu/cs_facpubs/139/},
	abstract = {Efficient RDF, graph based queries are becoming more pertinent based on the increased interest in data analytics and its intersection with large, unstructured but connected data. Many commercial systems have adopted distributed RDF graph systems in order to handle increasing dataset sizes and complex queries. This paper introduces a distribute graph approach to pre-processing linked data. Instead of traversing the memory graph, our system indexes pre-processed join elements that are organized in a graph structure. We analyze the Dbpedia data-set (derived from the Wikipedia corpus) and compare our access method to the graph traversal access approach which we also devise. Results show from our experiments that the distributed, pre-processed graph approach to accessing linked data is faster than the traversal approach over a specific range of linked queries.},
	booktitle = {Workshop on {Semantic} {Big} {Data} ({SBD} 2018) at {ACM} {SIGMOD}},
	author = {Lewis, Mike and Thiruvathukal, George K. and Vishwanath, Venkatram and Papka, Michael and Johnson, Andrew},
	year = {2017},
}

@inproceedings{alyamkin_2018_2018,
	title = {2018 {Low}-{Power} {Image} {Recognition} {Challenge}: {Status}, {Challenegs}, {Opportunities}},
	url = {https://ecommons.luc.edu/cs_facpubs/217/},
	abstract = {Computer vision has achieved impressive progress in recent years. Meanwhile, mobile phones have become the primary computing platforms for millions of people. In addition to mobile phones, many autonomous systems rely on visual data for making decisions and some of these systems have limited energy (such as unmanned aerial vehicles also called drones and mobile robots). These systems rely on batteries and energy efficiency is critical. This article serves two main purposes: (1) Examine the state-of-the-art for low-power solutions to detect objects in images. Since 2015, the IEEE Annual International Low-Power Image Recognition Challenge (LPIRC) has been held to identify the most energy-efficient computer vision solutions. This article summarizes 2018 winners' solutions. (2) Suggest directions for research as well as opportunities for low-power computer vision.},
	booktitle = {{arXiv}:1810.01732},
	author = {Alyamkin, Sergei and Ardi, Matthew and Brighton, Achille and Berg, Alexander C. and Chen, Yiran and Cheng, Hsin-Pai and Chen, Bo and Fan, Zichen and Feng, Chen and Fu, Bo and Gauen, Kent and Go, Jongkook and Goncharenko, Alexander and Guo, Xuyang and Nguyen, Hong Hanh and Howard, Andrew and Huang, Yuanjun and Kang, Donghyun and Kim, Jaeyoun and Kondratyev, Alexander and Lee, Seungjae and Lee, Suwoong and Lee, Junhyeok and Liang, Zhiyu and Liu, Xin and Liu, Juzheng and Li, Zichao and Lu, Yang and Lu, Yung-Hsiang and Malik, Deeptanshu and Park, Eunbyung and Repin, Denis and Sheng, Tao and Shen, Liang and Sun, Fei and Svitov, David and Thiruvathukal, George K. and Zhang, Baiwu and Zhang, Jingchi and Zhang, Xiaopeng and Zhuo, Shaojie},
	year = {2018},
}

@inproceedings{eisty_survey_2018,
	title = {A {Survey} of {Software} {Metric} {Use} in {Research} {Software} {Development}},
	url = {https://ecommons.luc.edu/cs_facpubs/206/},
	doi = {10.1109/eScience.2018.00036},
	abstract = {Background: Breakthroughs in research increasingly depend on complex software libraries, tools, and applications aimed at supporting specific science, engineering, business, or humanities disciplines. The complexity and criticality of this software motivate the need for ensuring quality and reliability. Software metrics are a key tool for assessing, measuring, and understanding software quality and reliability. Aims: The goal of this work is to better understand how research software developers use traditional software engineering concepts, like metrics, to support and evaluate both the software and the software development process. One key aspect of this goal is to identify how the set of metrics relevant to research software corresponds to the metrics commonly used in traditional software engineering. Method: We surveyed research software developers to gather information about their knowledge and use of code metrics and software process metrics. We also analyzed the influence of demographics (project size, development role, and development stage) on these metrics. Results: The survey results, from 129 respondents, indicate that respondents have a general knowledge of metrics. However, their knowledge of specific SE metrics is lacking, their use even more limited. The most used metrics relate to performance and testing. Even though code complexity often poses a significant challenge to research software development, respondents did not indicate much use of code metrics. Conclusions: Research software developers appear to be interested and see some value in software metrics but may be encountering roadblocks when trying to use them. Further study is needed to determine the extent to which these metrics could provide value in continuous process improvement.},
	booktitle = {2018 {IEEE} 14th {International} {Conference} on e-{Science} (e-{Science})},
	author = {Eisty, Nasir U. and Thiruvathukal, George K. and Carver, Jeffrey C.},
	month = oct,
	year = {2018},
	pages = {212--222},
}

@inproceedings{surakitbanharn_cross-referencing_2018,
	title = {Cross-{Referencing} {Social} {Media} and {Public} {Surveillance} {Camera} {Data} for {Disaster} {Response}},
	url = {https://ecommons.luc.edu/cs_facpubs/203/},
	doi = {10.1109/THS.2016.7568911},
	abstract = {Physical media (like surveillance cameras) and social media (like Instagram and Twitter) may both be useful in attaining on-the-ground information during an emergency or disaster situation. However, the intersection and reliability of both surveillance cameras and social media during a natural disaster are not fully understood. To address this gap, we tested whether social media is of utility when physical surveillance cameras went off-line during Hurricane Irma in 2017. Specifically, we collected and compared geo-tagged Instagram and Twitter posts in the state of Florida during times and in areas where public surveillance cameras went off-line. We report social media content and frequency and content to determine the utility for emergency managers or first responders during a natural disaster.},
	booktitle = {{IEEE} {Symposium} on {Technologies} for {Homeland} {Security}},
	author = {Surakitbanharn, Chittayong and Yau, Calvin and Wang, Guizhen and Chawla, Aniesh and Pan, Yinuo and Sun, Zhaoya and Yellin, Sam and Ebert, David and Lu, Yung-Hsiang and Thiruvathukal, George K.},
	month = oct,
	year = {2018},
}

@inproceedings{laufer_tests_2019,
	address = {New York, NY, USA},
	series = {Scala '19},
	title = {Tests as {Maintainable} {Assets} via {Auto}-{Generated} {Spies}: {A} {Case} {Study} {Involving} the {Scala} {Collections} {Library}'s {Iterator} {Trait}},
	isbn = {9781450368247},
	url = {https://doi.org/10.1145/3337932.3338814},
	doi = {10.1145/3337932.3338814},
	abstract = {In testing stateful abstractions, it is often necessary to record interactions, such as method invocations, and express assertions over these interactions. Following the Test Spy design pattern, we can reify such interactions programmatically through additional mutable state. Alternatively, a mocking framework, such as Mockito, can automatically generate test spies that allow us to record the interactions and express our expectations in a declarative domain-specific language. According to our study of the test code for Scala's Iterator trait, the latter approach can lead to a significant reduction of test code complexity in terms of metrics such as code size (in some cases over 70\% smaller), cyclomatic complexity, and amount of additional mutable state required. In this tools paper, we argue that the resulting test code is not only more maintainable, readable, and intentional, but also a better stylistic match for the Scala community than manually implemented, explicitly stateful test spies.},
	booktitle = {Proceedings of the {Tenth} {ACM} {SIGPLAN} {Symposium} on {Scala}},
	publisher = {Association for Computing Machinery},
	author = {Läufer, Konstantin and O'Sullivan, John and Thiruvathukal, George K.},
	year = {2019},
	note = {event-place: London, United Kingdom},
	pages = {17--21},
}

@inproceedings{greenberg_integrating_2019,
	title = {Integrating {Mathematics} and {Educational} {Robotics}: {Simple} {Motion} {Planning}},
	url = {http://ecommons.luc.edu/cs_facpubs/213},
	abstract = {This paper shows how students can be guided to integrate elementary mathematical analyses with motion planning for typical educational robots. Rather than using calculus as in comprehensive works on motion planning, we show students can achieve interesting results using just simple linear regression tools and trigonometric analyses. Experiments with one robotics platform show that use of these tools can lead to passable navigation through dead reckoning even if students have limited experience with use of sensors, programming, and mathematics.},
	booktitle = {10th {International} {Conference} on {Robotics} in {Education} ({RiE})},
	author = {Greenberg, Ronald I. and Thiruvathukal, George K. and Greenberg, Sara T.},
	editor = {Verlag, Springer},
	year = {2019},
}

@inproceedings{west_flic_2020,
	title = {{FLIC}: {A} {Distributed} {Fog} {Cache} for {City}-{Scale} {Applications}},
	url = {http://ecommons.luc.edu/cs_facpubs/243},
	doi = {10.1109/ICFC49376.2020.00019},
	abstract = {We present FLIC, a distributed software data caching framework for fogs that reduces network traffic and latency. FLIC is targeted toward city-scale deployments of cooperative IoT devices in which each node gathers and shares data with surrounding devices. As machine learning and other data processing techniques that require large volumes of training data are ported to low-cost and low-power IoT systems, we expect that data analysis will be moved away from the cloud. Separation from the cloud will reduce reliance on power-hungry centralized cloud-based infrastructure. However, city-scale deployments of cooperative IoT devices often connect to the Internet with cellular service, in which service charges are proportional to network usage. IoT system architects must be clever in order to keep costs down in these scenarios. To reduce the network bandwidth required to operate city-scale deployments of cooperative IoT systems, FLIC implements a distributed cache on the IoT nodes in the fog. FLIC allows the IoT network to share its data without repetitively interacting with a simple cloud storage service, reducing calls out to a backing store. Our results displayed a less than 2\% miss rate on reads. Thus, allowing for only 5\% of requests needing the backing store. We were also able to achieve more than 50\% reduction in bytes transmitted per second.},
	booktitle = {2020 {IEEE} {International} {Conference} on {Fog} {Computing} ({ICFC})},
	author = {West, Jack and Klingensmith, Neil and Thiruvathukal, George K.},
	month = apr,
	year = {2020},
	pages = {73--78},
}

@inproceedings{aghajanzadeh_camera_2020,
	title = {Camera {Placement} {Meeting} {Restrictions} of {Computer} {Vision}},
	url = {http://ecommons.luc.edu/cs_facpubs/250},
	doi = {10.1109/ICIP40778.2020.9190851},
	abstract = {In the blooming era of smart edge devices, surveillance cameras have been deployed in many locations. Surveillance cameras are most useful when they are spaced out to maximize coverage of an area. However, deciding where to place cameras is an NP-hard problem and researchers have proposed heuristic solutions. Existing work does not consider a significant restriction of computer vision: in order to track a moving object, the object must occupy enough pixels. The number of pixels depends on many factors (How far away is the object? What is the camera resolution? What is the focal length?). In this study, we propose a camera placement method that identifies effective camera placement in arbitrary spaces and can account for different camera types as well. Our strategy represents spaces as polygons, then uses a greedy algorithm to partition the polygons and determine the cameras’ locations to provide the desired coverage. Our solution also makes it possible to perform object tracking via overlapping camera placement. Our method is evaluated against complex shapes and real-world museum floor plans, achieving up to 85\% coverage and 25\% overlap.},
	booktitle = {2020 {IEEE} {International} {Conference} on {Image} {Processing} ({ICIP})},
	author = {Aghajanzadeh, Sara and Naidu, Roopasree and Chen, Shuo-Han and Tung, Caleb and Goel, Abhinav and Lu, Yung-Hsiang and Thiruvathukal, George K.},
	month = oct,
	year = {2020},
	pages = {3254--3258},
}

@inproceedings{goel_survey_2020,
	title = {A {Survey} of {Methods} for {Low}-{Power} {Deep} {Learning} and {Computer} {Vision}},
	url = {http://ecommons.luc.edu/cs_facpubs/241},
	doi = {10.1109/WF-IoT48130.2020.9221198},
	abstract = {Deep neural networks (DNNs) are successful in many computer vision tasks. However, the most accurate DNNs require millions of parameters and operations, making them energy, computation and memory intensive. This impedes the deployment of large DNNs in low-power devices with limited compute resources. Recent research improves DNN models by reducing the memory requirement, energy consumption, and number of operations without significantly decreasing the accuracy. This paper surveys the progress of low-power deep learning and computer vision, specifically in regards to inference, and discusses the methods for compacting and accelerating DNN models. The techniques can be divided into four major categories: (1) parameter quantization and pruning, (2) compressed convolutional filters and matrix factorization, (3) network architecture search, and (4) knowledge distillation. We analyze the accuracy, advantages, disadvantages, and potential solutions to the problems with the techniques in each category. We also discuss new evaluation metrics as a guideline for future research.},
	booktitle = {2020 {IEEE} 6th {World} {Forum} on {Internet} of {Things} ({WF}-{IoT})},
	author = {Goel, Abhinav and Tung, Caleb and Lu, Yung-Hsiang and Thiruvathukal, George K.},
	month = jun,
	year = {2020},
	pages = {1--6},
}

@inproceedings{dematties_towards_2020,
	title = {Towards {High}-{End} {Scalability} on {Biologically}-{Inspired} {Computational} {ModelsAuthors}},
	url = {https://ecommons.luc.edu/cs_facpubs/242/},
	abstract = {The interdisciplinary field of neuroscience has made significantprogress in recent decades, providing the scientific community in gen-eral with a new level of understanding on how the brain works beyondthe store-and-fire model found in traditional neural networks. Mean-while, Machine Learning (ML) based on established models has seena surge of interest in the High Performance Computing (HPC) com-munity, especially through the use of high-end accelerators, such asGraphical Processing Units (GPUs), including HPC clusters of same.In our work, we are motivated to exploit these high-performance com-puting developments and understand the scaling challenges for new–biologically inspired–learning models on leadership-class HPC resources.These emerging models feature sparse and random connectivity pro-files that map to more loosely-coupled parallel architectures with alarge number of CPU cores per node. Contrasted with traditional MLcodes, these methods exploit loosely-coupled sparse data structures asopposed to tightly-coupled dense matrix computations, which benefitfrom SIMD-style parallelism found on GPUs. In this paper we introducea hybrid Message Passing Interface (MPI) and Open Multi-Processing(OpenMP) parallelization scheme to accelerate and scale our computa-tional model based on the dynamics of cortical tissue. We ran compu-tational tests on a leadership class visualization and analysis cluster atArgonne National Laboratory. We include a study of strong and weakscaling, where we obtained parallel efficiency measures with a minimumabove 87\% and a maximum above 97\% for simulations of our biologicallyinspired neural network on up to 64 computing nodes running 8 threadseach. This study shows promise of the MPI+OpenMP hybrid approachto support flexible and biologically-inspired computational experimen-tal scenarios. In addition, we present the viability in the application ofthese strategies in high-end leadership computers in the future.},
	booktitle = {Parallel {Computing}: {Technology} {Trends}},
	author = {Dematties, Dario and Thiruvathukal, George K. and Rizzi, Silvio B. and Wainselboim, Alejandro and Zanutto, B. Silvano},
	editor = {Foster, Ian and Joubert, Gerhard R. and Kučera, Luděk and Nagel, Wolfgang E. and Peter, Frans},
	year = {2020},
	pages = {497--506},
}

@inproceedings{west_moonshine_2021,
	address = {New York, NY, USA},
	title = {Moonshine: {An} {Online} {Randomness} {Distiller} for {Zero}-{Involvement} {Authentication}},
	url = {https://ecommons.luc.edu/cs_facpubs/270/},
	doi = {TBD},
	abstract = {Context-based authentication is a method for transparently validating another device's legitimacy to join a network based on location. Devices can pair with one another by continuously harvesting environmental noise to generate a random key with no user involvement. However, there are gaps in our understanding of the theoretical limitations of environmental noise harvesting, making it difficult for researchers to build efficient algorithms for sampling environmental noise and distilling keys from that noise. This work explores the information-theoretic capacity of context-based authentication mechanisms to generate random bit strings from environmental noise sources with known properties. Using only mild assumptions about the source process's characteristics, we demonstrate that commonly-used bit extraction algorithms extract only about 10\% of the available randomness from a source noise process. We present an efficient algorithm to improve the quality of keys generated by context-based methods and evaluate it on real key extraction hardware. Moonshine is a randomness distiller which is more efficient at extracting bits from an environmental entropy source than existing methods. Our techniques nearly double the quality of keys as measured by the NIST test suite, producing keys that can be used in real-world authentication scenarios.},
	booktitle = {Information {Processing} in {Sensor} {Networks} 2021 ({IPSN} 2021)},
	publisher = {Association for Computing Machinery},
	author = {West, Jack and Lee, Kyuin and Banerjee, Suman and Kim, Younghyun and Thiruvathukal, George K. and Klingensmith, Neil},
	year = {2021},
}

@inproceedings{goel_directed_2022,
	address = {New York, NY, USA},
	series = {{ISLPED} '22},
	title = {Directed {Acyclic} {Graph}-{Based} {Neural} {Networks} for {Tunable} {Low}-{Power} {Computer} {Vision}},
	isbn = {9781450393546},
	url = {https://doi.org/10.1145/3531437.3539723},
	doi = {10.1145/3531437.3539723},
	abstract = {Processing visual data on mobile devices has many applications, e.g., emergency response and tracking. State-of-the-art computer vision techniques rely on large Deep Neural Networks (DNNs) that are usually too power-hungry to be deployed on resource-constrained edge devices. Many techniques improve DNN efficiency of DNNs by compromising accuracy. However, the accuracy and efficiency of these techniques cannot be adapted for diverse edge applications with different hardware constraints and accuracy requirements. This paper demonstrates that a recent, efficient tree-based DNN architecture, called the hierarchical DNN, can be converted into a Directed Acyclic Graph-based (DAG) architecture to provide tunable accuracy-efficiency tradeoff options. We propose a systematic method that identifies the connections that must be added to convert the tree to a DAG to improve accuracy. We conduct experiments on popular edge devices and show that increasing the connectivity of the DAG improves the accuracy to within 1\% of the existing high accuracy techniques. Our approach requires 93\% less memory, 43\% less energy, and 49\% fewer operations than the high accuracy techniques, thus providing more accuracy-efficiency configurations.},
	booktitle = {Proceedings of the {ACM}/{IEEE} {International} {Symposium} on {Low} {Power} {Electronics} and {Design}},
	publisher = {Association for Computing Machinery},
	author = {Goel, Abhinav and Tung, Caleb and Eliopoulos, Nick and Hu, Xiao and Thiruvathukal, George K. and Davis, James C. and Lu, Yung-Hsiang},
	year = {2022},
	note = {event-place: Boston, MA, USA},
}

@inproceedings{yang_are_2022,
	title = {Are {You} {Really} {Muted}?: {A} {Privacy} {Analysis} of {Mute} {Buttons} in {Video} {Conferencing} {Apps}},
	url = {https://ecommons.luc.edu/cs_facpubs/287/},
	doi = {https://doi.org/10.56553/popets-2022-0077},
	booktitle = {Proceedings of 22nd {Privacy} {Enhancing} {Technologies} {Symposium} ({PETS} 2022)},
	author = {Yang, Yucheng and West, Jack and Thiruvathukal, George K. and Klingensmith, Neil and Fawaz, Kassem},
	year = {2022},
}

@inproceedings{tung_irrelevant_2022,
	title = {Irrelevant {Pixels} are {Everywhere}: {Find} and {Exclude} {Them} for {More} {Efficient} {Computer} {Vision}},
	url = {https://ecommons.luc.edu/cs_facpubs/293/},
	doi = {10.1109/AICAS54282.2022.9870012},
	booktitle = {2022 {IEEE} 4th {International} {Conference} on {Artificial} {Intelligence} {Circuits} and {Systems} ({AICAS})},
	author = {Tung, Caleb and Goel, Abhinav and Hu, Xiao and Eliopoulos, Nick and Amobi, Emmanuel S. and Thiruvathukal, George K. and Chaudhary, Vipin and Lu, Yung-Hsiang},
	year = {2022},
	pages = {340--343},
}

@inproceedings{chakraborty_real-time_2020,
	title = {A {Real}-{Time} {Feature} {Indexing} {System} on {Live} {Video} {Streams}},
	url = {http://ecommons.luc.edu/cs_facpubs/249},
	doi = {10.1109/COMPSAC48688.2020.00016},
	abstract = {Most of the existing video storage systems rely on offline processing to support the feature-based indexing on video streams. The feature-based indexing technique provides an effective way for users to search video content through visual features, such as object categories (e.g., cars and persons). However, due to the reliance on offline processing, video streams along with their captured features cannot be searchable immediately after video streams are recorded. According to our investigation, buffering and storing live video steams are more time-consuming than the YOLO v3 object detector. Such observation motivates us to propose a real-time feature indexing (RTFI) system to enable instantaneous feature-based indexing on live video streams after video streams are captured and processed through object detectors. RTFI achieves its real-time goal via incorporating the novel design of metadata structure and data placement, the capability of modern object detector (i.e., YOLO v3), and the deduplication techniques to avoid storing repetitive video content. Notably, RTFI is the first system design for realizing real-time feature-based indexing on live video streams. RTFI is implemented on a Linux server and can improve the system throughput by upto 10.60x, compared with the base system without the proposed design. In addition, RTFI is able to make the video content searchable within 20 milliseconds for 10 live video streams after the video content is received by the proposed system, excluding the network transfer latency.},
	booktitle = {2020 {IEEE} 44th {Annual} {Computers}, {Software}, and {Applications} {Conference} ({COMPSAC})},
	author = {Chakraborty, Aditya and Pawar, Akshay and Jang, Hojoung and Huang, Shunqiao and Mishra, Sripath and Shuo-Han, Chen and Chang, Yan-Hao and Thiruvathukal, George K. and Lu, Yung-Hsiang},
	month = jul,
	year = {2020},
	pages = {42--50},
}

@inproceedings{jiang_empirical_2022,
	address = {New York, NY, USA},
	series = {{SCORED}'22},
	title = {An {Empirical} {Study} of {Artifacts} and {Security} {Risks} in the {Pre}-{Trained} {Model} {Supply} {Chain}},
	isbn = {9781450398855},
	url = {https://doi.org/10.1145/3560835.3564547},
	doi = {10.1145/3560835.3564547},
	abstract = {Deep neural networks achieve state-of-the-art performance on many tasks, but require increasingly complex architectures and costly training procedures. Engineers can reduce costs by reusing a pre-trained model (PTM) and fine-tuning it for their own tasks. To facilitate software reuse, engineers collaborate around model hubs, collections of PTMs and datasets organized by problem domain. Although model hubs are now comparable in popularity and size to other software ecosystems, the associated PTM supply chain has not yet been examined from a software engineering perspective. We present an empirical study of artifacts and security features in 8 model hubs. We indicate the potential threat models and show that the existing defenses are insufficient for ensuring the security of PTMs. We compare PTM and traditional supply chains, and propose directions for further measurements and tools to increase the reliability of the PTM supply chain.},
	booktitle = {Proceedings of the 2022 {ACM} {Workshop} on {Software} {Supply} {Chain} {Offensive} {Research} and {Ecosystem} {Defenses}},
	publisher = {Association for Computing Machinery},
	author = {Jiang, Wenxin and Synovic, Nicholas and Sethi, Rohan and Indarapu, Aryan and Hyatt, Matt and Schorlemmer, Taylor R. and Thiruvathukal, George K. and Davis, James C.},
	year = {2022},
	note = {event-place: Los Angeles, CA, USA},
	keywords = {deep neural networks, empirical software engineering, machine learning, model hubs, software reuse, software supply chain},
	pages = {105--114},
}

@inproceedings{goel_efficient_2022,
	title = {Efficient {Computer} {Vision} on {Edge} {Devices} with {Pipeline}-{Parallel} {Hierarchical} {Neural} {Networks}},
	url = {https://ecommons.luc.edu/cs_facpubs/276/},
	doi = {TBD},
	abstract = {Computer vision on low-power edge devices enables applications including search-and-rescue and security. State-of-the-art computer vision algorithms, such as Deep Neural Networks (DNNs), are too large for inference on low-power edge devices. To improve efficiency, some existing approaches parallelize DNN inference across multiple edge devices. However, these techniques introduce significant communication and synchronization overheads or are unable to balance workloads across devices. This paper demonstrates that the hierarchical DNN architecture is well suited for parallel processing on multiple edge devices. We design a novel method that creates a parallel inference pipeline for computer vision problems that use hierarchical DNNs. The method balances loads across the collaborating devices and reduces communication costs to facilitate the processing of multiple video frames simultaneously with higher throughput. Our experiments consider a representative computer vision problem where image recognition is performed on each video frame, running on multiple Raspberry Pi 4Bs. With four collaborating low-power edge devices, our approach achieves 3.21X higher throughput, 68\% less energy consumption per device per frame, and 58\% decrease in memory when compared with existing single-device hierarchical DNNs.},
	booktitle = {27th {Asia} and {South} {Pacific} {Design} {Automation} {Conference} ({ASP}-{DAC})},
	author = {Goel, Abhinav and Tung, Caleb and Hu, Xiao and Thiruvathukal, George K. and Davis, James C. and Lu, Yung-Hsiang},
	year = {2022},
}

@inproceedings{veselsky_establishing_2022,
	title = {Establishing {Trust} in {Vehicle}-to-{Vehicle} {Coordination}: {A} {Sensor} {Fusion} {Approach}},
	doi = {10.1109/DI-CPS56137.2022.00008},
	booktitle = {2022 2nd {Workshop} on {Data}-{Driven} and {Intelligent} {Cyber}-{Physical} {Systems} for {Smart} {Cities} {Workshop} ({DI}-{CPS})},
	author = {Veselsky, Jakob and West, Jack and Ahlgren, Isaac and Thiruvathukal, George K. and Klingensmith, Neil and Goel, Abhinav and Jiang, Wenxin and Davis, James C. and Lee, Kyuin and Kim, Younghyun},
	year = {2022},
	keywords = {Computer Vision, Conferences, Hazards, Protocols, Sensor fusion, Smart cities, Vehicular ad hoc networks, Visualization, autonomous driving, zero involvement pairing and authentication},
	pages = {7--13},
}

@inproceedings{jiang_empirical_2023,
	title = {An {Empirical} {Study} of {Pre}-{Trained} {Model} {Reuse} in the {Hugging} {Face} {Deep} {Learning} {Model} {Registry}},
	doi = {10.1109/ICSE48619.2023.00206},
	booktitle = {2023 {IEEE}/{ACM} 45th {International} {Conference} on {Software} {Engineering} ({ICSE})},
	author = {Jiang, Wenxin and Synovic, Nicholas and Hyatt, Matt and Schorlemmer, Taylor R. and Sethi, Rohan and Lu, Yung-Hsiang and Thiruvathukal, George K. and Davis, James C.},
	year = {2023},
	keywords = {Biological system modeling, Cybersecurity, Decision making, Deep learning, Ecosystems, Empirical software engineering, Engineering decision making, Machine learning, Software reuse, Software supply chain, Standardization, Supply chains, Systematics, Trust},
	pages = {2463--2475},
}

@inproceedings{laufer_unoapi_2022,
	title = {{UnoAPI}: {Balancing} {Performance}, {Portability}, and {Productivity} ({P3}) in {HPC} {Education}},
	url = {https://unoapi.cs.luc.edu},
	doi = {10.1109/EduHPC56719.2022.00006},
	booktitle = {2022 {IEEE}/{ACM} {International} {Workshop} on {Education} for {High} {Performance} {Computing} ({EduHPC})},
	author = {Läufer, Konstantin and Thiruvathukal, George K.},
	year = {2022},
	pages = {1--10},
}

@inproceedings{davis_reusing_2023,
	title = {Reusing {Deep} {Learning} {Models}: {Challenges} and {Directions} in {Software} {Engineering}},
	url = {https://ecommons.luc.edu/cs_facpubs/325/},
	doi = {https://doi.org/10.6084/m9.figshare.23317556},
	booktitle = {{IEEE} {John} {Vincent} {Atanasoff} {Symposium} on {Modern} {Computing}},
	author = {Davis, James C. and Jajal, Purvish and Jiang, Wenxin and Schorlemmer, Taylor R and Synovic, Nicholas and Thiruvathukal, George K., },
	year = {2023},
}

@inproceedings{jiang_ptmtorrent_2023,
	title = {{PTMTorrent}: {A} {Dataset} for {Mining} {Open}-source {Pre}-trained {Model} {Packages}},
	doi = {10.1109/MSR59073.2023.00021},
	booktitle = {2023 {IEEE}/{ACM} 20th {International} {Conference} on {Mining} {Software} {Repositories} ({MSR})},
	author = {Jiang, Wenxin and Synovic, Nicholas and Jajal, Purvish and Schorlemmer, Taylor R. and Tewari, Arav and Pareek, Bhavesh and Thiruvathukal, George K. and Davis, James C.},
	year = {2023},
	keywords = {Data Mining, Data mining, Deep learning, Documentation, Empirical software engineering, Limiting, Machine learning, Metadata, Open-Source Software, Software, Training},
	pages = {57--61},
}

@inproceedings{jiang_peatmoss_2024,
	title = {{PeaTMOSS}: {A} {Dataset} and {Initial} {Analysis} of {Pre}-{Trained} {Models} in {Open}-{Source} {Software}},
	url = {https://ecommons.luc.edu/cs_facpubs/362/},
	booktitle = {Mining {Software} {Repositories} 2024 ({MSR} 2024)},
	author = {Jiang, Wenxin and Yasmin, Jerin and Jones, Jason and Synovic, Nicholas and Kuo, Jiashen and Bielanski, Nathaniel and Tian, Yuan and Thiruvathukal, George K. and Davis, James C.},
	year = {2024},
}

@inproceedings{davis_reusing_2023-1,
	title = {Reusing {Deep} {Learning} {Models}: {Challenges} and {Directions} in {Software} {Engineering}},
	doi = {10.1109/JVA60410.2023.00015},
	booktitle = {2023 {IEEE} {John} {Vincent} {Atanasoff} {International} {Symposium} on {Modern} {Computing} ({JVA})},
	author = {Davis, James C. and Jajal, Purvish and Jiang, Wenxin and Schorlemmer, Taylor R. and Synovic, Nicholas and Thiruvathukal, George K.},
	year = {2023},
	keywords = {Adaptation models, Artificial neural networks, Computational modeling, Costs, Deep learning, Empirical software engineering, Industries, Machine learning, Performance evaluation, Position, Pre-trained models, Re-use, Training, Vision},
	pages = {17--30},
}

@inproceedings{juarez_actionpoint_2024,
	title = {{ActionPoint}: {An} {App} to {Combat} {Cyberbullying} by {Strengthening} {Parent}-{Teen} {Relationships}},
	doi = {10.1109/WFPST58552.2024.00008},
	booktitle = {2024 {IEEE} {World} {Forum} on {Public} {Safety} {Technology} ({WFPST})},
	author = {Juarez, Maddie and Barragan, Natali and Hall, Deborah L. and Thiruvathukal, George K. and Silva, Yasin N.},
	year = {2024},
	keywords = {Addiction, Cyberbullying, Depression, Mobile applications, Psychology, Public security, anti-bullying tools, cyberbullying, mobile applications, parents, social media, social networks, teens},
	pages = {99--103},
}

@inproceedings{juraev_impact_2024,
	title = {The {Impact} of {Model} {Variations} on the {Robustness} of {Deep} {Learning} {Models} in {Adversarial} {Settings}},
	doi = {10.1109/SVCC61185.2024.10637362},
	booktitle = {2024 {Silicon} {Valley} {Cybersecurity} {Conference} ({SVCC})},
	author = {Juraev, Firuz and Abuhamad, Mohammed and Woo, Simon S. and Thiruvathukal, George K and Abuhmed, Tamer},
	year = {2024},
	keywords = {Adversarial Attacks, Analytical models, Computer Vision, Deep Learning, Defenses, Model robustness, Noise, Pressing, Robustness, Stability analysis, Surveillance, Training},
	pages = {1--7},
}

@inproceedings{juraev_unmasking_2024,
	title = {Unmasking the {Vulnerabilities} of {Deep} {Learning} {Models}: {A} {Multi}-{Dimensional} {Analysis} of {Adversarial} {Attacks} and {Defenses}},
	doi = {10.1109/SVCC61185.2024.10637364},
	booktitle = {2024 {Silicon} {Valley} {Cybersecurity} {Conference} ({SVCC})},
	author = {Juraev, Firuz and Abuhamad, Mohammed and Chan-Tin, Eric and Thiruvathukal, George K. and Abuhmed, Tamer},
	year = {2024},
	keywords = {Adversarial Perturbations, Analytical models, Black-box Attacks, Closed box, Deep Learning, Deep learning, Defensive Techniques, Noise, Surveillance, Threat Analysis, Training, Transform coding},
	pages = {1--8},
}

@inproceedings{almeida_optimizing_2024,
	title = {Optimizing {Uncertainty} {Estimation} on {Scientific} {Visualizations} {Using} {Learning} {Models}},
	doi = {10.1109/SCW63240.2024.00058},
	booktitle = {{SC24}-{W}: {Workshops} of the {International} {Conference} for {High} {Performance} {Computing}, {Networking}, {Storage} and {Analysis}},
	author = {Almeida, Clara J. and Guerrero-Pantoja, David and Pautsch, Erik and Rizzi, Silvio and Thiruvathukal, George K. and Pantoja, Maria},
	year = {2024},
	keywords = {Atmospheric modeling, Automotive components, Computational modeling, Numerical models, Predictive models, Reliability, Spatial databases, Standards, Statistical analysis, Uncertainty, deep learning, ensemble learning, evidential learning, scientific visualization, uncertainty},
	pages = {387--393},
}
